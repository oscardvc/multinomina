<?php
	include_once('connection.php');

//Class Prevision_social definition

	class Prevision_social
	{
		//class properties
		//data
		private $Nombre;
		private $id;//to be able to edit $Nombre
		private $Servicio;
		//database connection
		private $conn;

		//class methods
		public function __construct()
		{
		}

		public function __destruct()
		{
		}

		public function set($name, $value) //sets property named $name with value $value
		{
			$this->$name = $value;
		}

		public function get($name)//gets property named $name
		{
			return $this->$name;
		}

		public function setFromBrowser()//sets properties from superglobal $_POST
		{
			foreach($this as $key => $value)

				if(isset($_POST["$key"]))
				{

					if($key == 'Servicio')
					{
						$len = count($_POST['Servicio']);

						for($i=0; $i<$len; $i++)
						{

							if(!isset($this->Servicio))
								$this->Servicio = trim($_POST['Servicio'][$i]);
							else
								$this->Servicio .= ',' . trim($_POST['Servicio'][$i]);

						}

					}
					else
						$this->$key = trim($_POST["$key"]);

				}

		}

		public function showProperties()//prints properties values
		{
			foreach($this as $key => $value)
				if($key != 'conn')
					echo "$key = $value <br />";
		}

		private function connect()//connects to data base
		{
			$this->conn = new Connection('multinomina');
		}

		public function setFromDb()//sets properties from data base, but $Nombre has to be set before
		{

			if(!isset($this->conn))
				$this->connect();
			
			$result = $this->conn->query("SELECT * FROM Prevision_social WHERE Nombre = '$this->Nombre'");

			while($row = $this->conn->fetchRow($result,'ASSOC'))

				foreach($row as $key => $value)
					$this->$key = $value;

			$result = $this->conn->query("SELECT Servicio FROM Servicio_Prevision_social WHERE Prevision_social = '$this->Nombre'");

			while($row = $this->conn->fetchRow($result,'ASSOC'))

				foreach($row as $key => $value)
				{

					if(!isset($this->Servicio))
						$this->Servicio = $value;
					else
						$this->Servicio .= ',' . $value;

				}

		}

		public function dbStore($update)//if $update is false it stores a new database register with $this' properties if $update is true it updates all database registers (professedly one) with $this' Nombre
		{
			if (!isset($this->conn))
				$this->connect();
			
			if($update == 'false')
			{
				$this->conn->query("INSERT INTO Prevision_social(Nombre) VALUES ('{$this->Nombre}')");
			}
			else
			{
				$this->conn->query("UPDATE Prevision_social SET Nombre  = '$this->Nombre' WHERE Nombre = '$this->id'");
				$this->updateServicioRelations(array());
			}

			foreach($this as $key => $value)

				if(isset($this->$key))
				{

					if($key != 'conn' && $key != 'id')
					{

						if($key == 'Servicio')
						{
							$servicios = explode(',',$value);
							$len = count($servicios);

							for($i=0; $i<$len; $i++)
								$this->conn->query("INSERT INTO Servicio_Prevision_social (Servicio,Prevision_social) VALUES ({$servicios[$i]},'{$this->Nombre}')");

							$this->updateServicioRelations($servicios);
						}
						else
							$this->conn->query("UPDATE Prevision_social SET $key  = '$value' WHERE Nombre = '$this->Nombre'");

					}

				}
				elseif($key == 'Servicio')
					$this->updateServicioRelations(array());

			return true;
		}

		public function dbDelete()//delete this entity from database but Nombre has to be set before
		{
			if(!isset($this->conn))
				$this->connect();

			if(isset($this->Nombre))
				$this->conn->query("DELETE FROM Prevision_social WHERE Nombre = '$this->Nombre'");

		}

		public function draw($act)//draws $this Prevision_social. if $act == 'EDIT' or $act == 'ADD' the fields can be edited and the form is submitted. if $act == 'DRAW' the fields can't be edited and the form is not submitted
		{

			if(!isset($this->conn))
				$this->connect();

			echo "<div onclick = \"show('Datos_fieldset',this)\" class = \"datos_tab\">Datos</div>";//show at tabs.js

			if($act != 'ADD')
				echo "<div onclick = \"show('Servicios_fieldset',this)\" class = \"servicios_tab\">Servicios</div>";//show at tabs.js

			echo "<form class = \"show_form\">";
				echo "<fieldset class = \"Datos_fieldset\" style = \"visibility:visible\"\>";
					echo "<textarea rows = 5 cols = 20 name = \"id\" class=\"hidden_textarea\" readonly=true>"."$this->Nombre</textarea>";
					echo "<label class = \"nombre_label\">Nombre</label>";
					echo "<textarea rows = 5 cols = 20 class=\"nombre_textarea\" name = \"Nombre\" title = \"Nombre\" readonly=true>"."$this->Nombre</textarea>";
				echo "</fieldset>";
				echo "<fieldset class =  \"Servicios_fieldset\" style = \"visibility:hidden\"\>";
					echo "<table class = 'titles_table'><tr><td class = 'button_cell'></td><td>id</td><td>Periodicidad de la n√≥mina</td><td>Registro patronal</td><td>Empresa</td></tr></table>";
					echo "<div class = 'options' mode = '$act' dbtable1 = 'Prevision_social' dbtable2 = 'Servicio' _id = '$this->Nombre'></div>";
					echo "<table class = \"search_table\"><tr>";

					for($i=0; $i<5; $i++)

						if($i == 0)
							echo "<td class = 'search_button_cell'><input type='button' value='' class = 'search_button' onmouseover = \"search_button_bright(this)\" onmouseout = \"search_button_opaque(this)\" onclick = \"get_options('$act','Prevision_social','Servicio','$this->Nombre',null,this.parentNode.parentNode.parentNode.parentNode.parentNode)\"/></td><td><input type = 'text' class = 'search_field'  id = 'search_field" . $i . "'/></td>";
						else
							echo "<td><input type = 'text' class = 'search_field'" . $i . "'/></td>";

					echo "</tr></table>";
				echo "</fieldset>";

			if($act == 'EDIT' || $act == 'ADD')
				echo "<img title = \"Guardar\"class = \"submit_button\" onclick = \"_submit('$act',this.parentNode,'Prevision_social')\" />";//_submit() at common_entities.js
			
			echo "</form>";
		}

		private function updateServicioRelations($servicios)//If a relation Servicio<->Prevision_social has been deprecated it deletes it from db. $servicios is the actual related servicio array. $this->Nombre has to be set before calling this function
		{
			$result = $this->conn->query("SELECT Servicio FROM Servicio_Prevision_social WHERE Prevision_social = '$this->Nombre'");
			$len = count($servicios);

			while($row = $this->conn->fetchRow($result))
			{
				$flag = false;
				list($value) = $row;

				for($i=0; $i<$len; $i++)
				{
					if($value == $servicios[$i])
					{
						$flag = true;
						break;
					}

				}

				if(!$flag)
					$this->conn->query("DELETE FROM Servicio_Prevision_social WHERE Servicio = '$value' and Prevision_social = '$this->Nombre'");

			}

		}

	}

?>
